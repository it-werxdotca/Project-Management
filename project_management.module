<?php

/**
 * Implements hook_install().
 */
function project_management_install() {
  // Create required roles
  _project_management_create_roles();

  // Create content types and fields
  _project_management_create_content_types();

  // Create taxonomy vocabulary and terms
  _project_management_create_taxonomy_vocabulary();
}

/**
 * Creates the necessary roles for the project management system.
 */
function _project_management_create_roles() {
  // Define the roles needed for the project management system.
  $roles = ['Project Manager', 'Team Member', 'Accounting', 'Client'];

  foreach ($roles as $role) {
	// Check if the role already exists, if not, create it.
	if (!user_role_load_by_name($role)) {
	  $role_object = \Drupal\user\Entity\UserRole::create(['id' => strtolower(str_replace(' ', '_', $role)), 'label' => $role]);
	  $role_object->save();
	}
  }
}

/**
 * Create the content types necessary for project management.
 */
function _project_management_create_content_types() {
  // Create Project content type.
  if (!node_type_load('project')) {
	$project_type = NodeType::create(['type' => 'project', 'name' => 'Project']);
	$project_type->save();
  }

  // Create Task content type.
  if (!node_type_load('task')) {
	$task_type = NodeType::create(['type' => 'task', 'name' => 'Task']);
	$task_type->save();
  }

  // Create Invoice content type.
  if (!node_type_load('invoice')) {
	$invoice_type = NodeType::create(['type' => 'invoice', 'name' => 'Invoice']);
	$invoice_type->save();
  }

  // Create Message content type.
  if (!node_type_load('message')) {
	$message_type = NodeType::create(['type' => 'message', 'name' => 'Message']);
	$message_type->save();
  }

  // Add the taxonomy reference field to the 'Project' content type.
  _project_management_add_taxonomy_field_to_project();
}

/**
 * Create the taxonomy vocabulary for project categories.
 */
function _project_management_create_taxonomy_vocabulary() {
  // Check if the vocabulary exists; if not, create it.
  $vocabulary = taxonomy_vocabulary_load('project_category');
  if (!$vocabulary) {
	$vocabulary = TaxonomyVocabulary::create([
	  'vid' => 'project_category',
	  'name' => 'Project Categories',
	]);
	$vocabulary->save();
  }

  // Create predefined taxonomy terms for the project categories.
  _project_management_create_taxonomy_terms($vocabulary);
}

/**
 * Create predefined taxonomy terms for the project categories.
 *
 * @param \Drupal\taxonomy\Entity\Vocabulary $vocabulary
 *   The vocabulary to add terms to.
 */
function _project_management_create_taxonomy_terms($vocabulary) {
  $terms = ['Web Development', 'Mobile App Development', 'Marketing', 'Consulting', 'Design'];

  foreach ($terms as $term_name) {
	// Check if the term already exists, if not, create it.
	$term = taxonomy_term_load_multiple_by_name($term_name, $vocabulary->id());
	if (empty($term)) {
	  $new_term = TaxonomyTerm::create([
		'name' => $term_name,
		'vid' => $vocabulary->id(),
	  ]);
	  $new_term->save();
	}
  }
}

/**
 * Add a taxonomy reference field to the 'Project' content type.
 */
function _project_management_add_taxonomy_field_to_project() {
  // Load the project content type.
  $content_type = \Drupal\node\Entity\NodeType::load('project');

  // Check if the field already exists.
  if (!\Drupal::service('entity.field.manager')->fieldExists('node', 'project', 'field_project_category')) {
	// Create the field storage for the taxonomy reference field.
	$field_storage = \Drupal\field\Entity\FieldStorageConfig::create([
	  'field_name' => 'field_project_category',
	  'entity_type' => 'node',
	  'type' => 'entity_reference',
	  'settings' => [
		'target_type' => 'taxonomy_term',
		'handler' => 'default',
	  ],
	]);
	$field_storage->save();

	// Create the field instance for the 'Project' content type.
	$field_instance = \Drupal\field\Entity\FieldConfig::create([
	  'field_storage' => $field_storage,
	  'bundle' => 'project',
	  'label' => 'Project Category',
	  'settings' => [
		'handler_settings' => [
		  'target_bundles' => [
			'project_category' => 'project_category',
		  ],
		],
	  ],
	]);
	$field_instance->save();
  }
}

/**
 * Additional project management functions like adding users, etc. can be placed here.
 */
